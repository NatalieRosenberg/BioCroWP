* installing *source* package 'BioCroWP' ...
** using staged installation
** libs
using C++ compiler: 'G__~1.EXE (GCC) 12.3.0'
using C++11
g++  -std=gnu++11 -MT R_framework_version.o -MMD -MP -MF .deps/R_framework_version.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o R_framework_version.o R_framework_version.cpp
g++  -std=gnu++11 -MT R_module_library.o -MMD -MP -MF .deps/R_module_library.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o R_module_library.o R_module_library.cpp
g++  -std=gnu++11 -MT R_skeleton_version.o -MMD -MP -MF .deps/R_skeleton_version.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o R_skeleton_version.o R_skeleton_version.cpp
g++  -std=gnu++11 -MT init.o -MMD -MP -MF .deps/init.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o init.o init.cpp
g++  -std=gnu++11 -MT module_library/module_library.o -MMD -MP -MF .deps/module_library/module_library.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o module_library/module_library.o module_library/module_library.cpp
g++  -std=gnu++11 -MT framework/R_helper_functions.o -MMD -MP -MF .deps/framework/R_helper_functions.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/R_helper_functions.o framework/R_helper_functions.cpp
g++  -std=gnu++11 -MT framework/dynamical_system.o -MMD -MP -MF .deps/framework/dynamical_system.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/dynamical_system.o framework/dynamical_system.cpp
g++  -std=gnu++11 -MT framework/dynamical_system_helper_functions.o -MMD -MP -MF .deps/framework/dynamical_system_helper_functions.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/dynamical_system_helper_functions.o framework/dynamical_system_helper_functions.cpp
g++  -std=gnu++11 -MT framework/module_helper_functions.o -MMD -MP -MF .deps/framework/module_helper_functions.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/module_helper_functions.o framework/module_helper_functions.cpp
g++  -std=gnu++11 -MT framework/modules.o -MMD -MP -MF .deps/framework/modules.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/modules.o framework/modules.cpp
g++  -std=gnu++11 -MT framework/ode_solver.o -MMD -MP -MF .deps/framework/ode_solver.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/ode_solver.o framework/ode_solver.cpp
g++  -std=gnu++11 -MT framework/quadratic_root.o -MMD -MP -MF .deps/framework/quadratic_root.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/quadratic_root.o framework/quadratic_root.cpp
g++  -std=gnu++11 -MT framework/state_map.o -MMD -MP -MF .deps/framework/state_map.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/state_map.o framework/state_map.cpp
g++  -std=gnu++11 -MT framework/validate_dynamical_system.o -MMD -MP -MF .deps/framework/validate_dynamical_system.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/validate_dynamical_system.o framework/validate_dynamical_system.cpp
g++  -std=gnu++11 -MT framework/ode_solver_library/boost_ode_solvers.o -MMD -MP -MF .deps/framework/ode_solver_library/boost_ode_solvers.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/ode_solver_library/boost_ode_solvers.o framework/ode_solver_library/boost_ode_solvers.cpp
In file included from ../inc/boost/concept/assert.hpp:35,
                 from ../inc/boost/concept_check.hpp:20,
                 from ../inc/boost/range/concepts.hpp:19,
                 from ../inc/boost/range/size_type.hpp:20,
                 from ../inc/boost/range/size.hpp:21,
                 from ../inc/boost/range/functions.hpp:20,
                 from ../inc/boost/range.hpp:18,
                 from ../inc/boost/numeric/odeint/util/resize.hpp:22,
                 from ../inc/boost/numeric/odeint/util/state_wrapper.hpp:26,
                 from ../inc/boost/numeric/odeint/util/ublas_wrapper.hpp:33,
                 from ../inc/boost/numeric/odeint.hpp:25,
                 from framework/ode_solver_library/../ode_solver.h:5,
                 from framework/ode_solver_library/boost_ode_solvers.h:5,
                 from framework/ode_solver_library/boost_ode_solvers.cpp:1:
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator> >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from ../inc/boost/concept_check.hpp:31:
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>'
../inc/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':
../inc/boost/iterator/iterator_concepts.hpp:114:7:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >]':
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator> >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>'
../inc/boost/range/concepts.hpp:152:13:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':
../inc/boost/range/concepts.hpp:152:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>)>'
../inc/boost/range/concepts.hpp:278:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >]':
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>)>'
../inc/boost/range/concepts.hpp:278:9:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]':
../inc/boost/range/concepts.hpp:278:9:   required from 'struct boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >)>'
../inc/boost/range/algorithm/equal.hpp:174:13:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::const_iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >]':
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >)>'
../inc/boost/range/algorithm/equal.hpp:174:13:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]':
../inc/boost/range/algorithm/equal.hpp:174:13:   required from 'OutputIterator boost::range::copy(const SinglePassRange&, OutputIterator) [with SinglePassRange = boost::numeric::ublas::vector<double>; OutputIterator = boost::numeric::ublas::vector<double>::iterator]'
../inc/boost/numeric/odeint/util/copy.hpp:37:27:   required from 'void boost::numeric::odeint::detail::do_copying(const Container1&, Container2&, mpl_::true_) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>; mpl_::true_ = mpl_::bool_<true>]'
../inc/boost/numeric/odeint/util/copy.hpp:60:27:   required from 'static void boost::numeric::odeint::copy_impl_sfinae<Container1, Container2, Enabler>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>; Enabler = void]'
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::numeric::ublas::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator> >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = boost::numeric::ublas::vector<double>::const_iterator]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >]'
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::const_iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator> >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::numeric::ublas::vector<double>::const_iterator]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >]'
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::const_iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::const_iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >]'
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = boost::numeric::ublas::vector<double>; Container2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:148:33:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::numeric::ublas::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator> >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >]':
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator> >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >]':
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>)>'
../inc/boost/range/concepts.hpp:278:9:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]':
../inc/boost/range/concepts.hpp:278:9:   required from 'struct boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >)>'
../inc/boost/range/size.hpp:62:9:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >]':
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >)>'
../inc/boost/range/size.hpp:62:9:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]':
../inc/boost/range/size.hpp:62:9:   required from 'typename boost::range_size<const SinglePassRange>::type boost::size(const SinglePassRange&) [with SinglePassRange = numeric::ublas::vector<double>; typename range_size<const SinglePassRange>::type = long long unsigned int]'
../inc/boost/numeric/odeint/util/same_size.hpp:43:29:   required from 'static bool boost::numeric::odeint::same_size_impl_sfinae<State1, State2, Enabler>::same_size(const State1&, const State2&) [with State1 = boost::numeric::ublas::vector<double>; State2 = boost::numeric::ublas::vector<double>; Enabler = void]'
../inc/boost/numeric/odeint/util/same_size.hpp:55:67:   required from 'static bool boost::numeric::odeint::same_size_impl<State1, State2>::same_size(const State1&, const State2&) [with State1 = boost::numeric::ublas::vector<double>; State2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/same_size.hpp:64:56:   required from 'bool boost::numeric::odeint::same_size(const State1&, const State2&) [with State1 = boost::numeric::ublas::vector<double>; State2 = boost::numeric::ublas::vector<double>]'
../inc/boost/numeric/odeint/util/resizer.hpp:33:20:   required from 'bool boost::numeric::odeint::adjust_size_by_resizeability(ResizeWrappedState&, const State&, boost::true_type) [with ResizeWrappedState = state_wrapper<boost::numeric::ublas::vector<double>, void>; State = boost::numeric::ublas::vector<double>; boost::true_type = boost::integral_constant<bool, true>]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = boost::numeric::ublas::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator> >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = boost::numeric::ublas::vector<double>::iterator]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >]'
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator> >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::numeric::ublas::vector<double>::iterator]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >]'
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<boost::numeric::ublas::vector<double>::iterator> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = boost::numeric::ublas::vector<double>::iterator]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >]'
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<boost::numeric::ublas::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:184:48:   required from 'bool boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::resize_impl(const StateIn&) [with StateIn = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >]'
../inc/boost/numeric/odeint/stepper/rosenbrock4_dense_output.hpp:70:49:   required from 'void boost::numeric::odeint::rosenbrock4_dense_output<ControlledStepper>::initialize(const StateType&, time_type, time_type) [with StateType = boost::numeric::ublas::vector<double>; ControlledStepper = boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> >; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:131:18:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time, Time, Time, Observer, boost::numeric::odeint::dense_output_stepper_tag) [with Stepper = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = rosenbrock4_dense_output<rosenbrock4_controller<rosenbrock4<double> > >; System = dynamical_system_caller; State = boost::numeric::ublas::vector<double>; Time = double; Observer = push_back_state_and_time<boost::numeric::ublas::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::rosenbrock4_dense_output<boost::numeric::odeint::rosenbrock4_controller<boost::numeric::odeint::rosenbrock4<double> > >; state_type = boost::numeric::ublas::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.cpp:15:24:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = boost::numeric::ublas::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++  -std=gnu++11 -MT framework/ode_solver_library/ode_solver_factory.o -MMD -MP -MF .deps/framework/ode_solver_library/ode_solver_factory.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/ode_solver_library/ode_solver_factory.o framework/ode_solver_library/ode_solver_factory.cpp
In file included from ../inc/boost/concept/assert.hpp:35,
                 from ../inc/boost/concept_check.hpp:20,
                 from ../inc/boost/range/concepts.hpp:19,
                 from ../inc/boost/range/size_type.hpp:20,
                 from ../inc/boost/range/size.hpp:21,
                 from ../inc/boost/range/functions.hpp:20,
                 from ../inc/boost/range.hpp:18,
                 from ../inc/boost/numeric/odeint/util/resize.hpp:22,
                 from ../inc/boost/numeric/odeint/util/state_wrapper.hpp:26,
                 from ../inc/boost/numeric/odeint/util/ublas_wrapper.hpp:33,
                 from ../inc/boost/numeric/odeint.hpp:25,
                 from framework/ode_solver_library/../ode_solver.h:5,
                 from framework/ode_solver_library/ode_solver_factory.h:7,
                 from framework/ode_solver_library/ode_solver_factory.cpp:1:
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from ../inc/boost/concept_check.hpp:31:
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>'
../inc/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':
../inc/boost/iterator/iterator_concepts.hpp:114:7:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]':
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>'
../inc/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':
../inc/boost/range/concepts.hpp:152:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>'
../inc/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]':
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>'
../inc/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]':
../inc/boost/range/concepts.hpp:278:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<std::vector<double> >)>'
../inc/boost/range/size.hpp:62:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]':
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]':
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>'
../inc/boost/range/concepts.hpp:281:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]':
../inc/boost/range/concepts.hpp:281:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<std::vector<double> >)>'
../inc/boost/range/size.hpp:62:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]':
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<std::vector<double> >)>'
../inc/boost/range/size.hpp:62:9:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]':
../inc/boost/range/size.hpp:62:9:   required from 'typename boost::range_size<const SinglePassRange>::type boost::size(const SinglePassRange&) [with SinglePassRange = std::vector<double>; typename range_size<const SinglePassRange>::type = long long unsigned int]'
../inc/boost/numeric/odeint/util/same_size.hpp:43:29:   required from 'static bool boost::numeric::odeint::same_size_impl_sfinae<State1, State2, Enabler>::same_size(const State1&, const State2&) [with State1 = std::vector<double>; State2 = std::vector<double>; Enabler = void]'
../inc/boost/numeric/odeint/util/same_size.hpp:55:67:   required from 'static bool boost::numeric::odeint::same_size_impl<State1, State2>::same_size(const State1&, const State2&) [with State1 = std::vector<double>; State2 = std::vector<double>]'
../inc/boost/numeric/odeint/util/same_size.hpp:64:56:   required from 'bool boost::numeric::odeint::same_size(const State1&, const State2&) [with State1 = std::vector<double>; State2 = std::vector<double>]'
../inc/boost/numeric/odeint/util/resizer.hpp:33:20:   required from 'bool boost::numeric::odeint::adjust_size_by_resizeability(ResizeWrappedState&, const State&, boost::true_type) [with ResizeWrappedState = state_wrapper<std::vector<double>, void>; State = std::vector<double>; boost::true_type = boost::integral_constant<bool, true>]'
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:495:44:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const std::vector<double> > >]':
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const std::vector<double> >)>'
../inc/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const std::vector<double> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const std::vector<double> >]':
../inc/boost/range/algorithm/equal.hpp:174:13:   required from 'OutputIterator boost::range::copy(const SinglePassRange&, OutputIterator) [with SinglePassRange = std::vector<double>; OutputIterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
../inc/boost/numeric/odeint/util/copy.hpp:37:27:   required from 'void boost::numeric::odeint::detail::do_copying(const Container1&, Container2&, mpl_::true_) [with Container1 = std::vector<double>; Container2 = std::vector<double>; mpl_::true_ = mpl_::bool_<true>]'
../inc/boost/numeric/odeint/util/copy.hpp:60:27:   required from 'static void boost::numeric::odeint::copy_impl_sfinae<Container1, Container2, Enabler>::copy(const Container1&, Container2&) [with Container1 = std::vector<double>; Container2 = std::vector<double>; Enabler = void]'
../inc/boost/numeric/odeint/util/copy.hpp:70:58:   required from 'static void boost::numeric::odeint::copy_impl<Container1, Container2>::copy(const Container1&, Container2&) [with Container1 = std::vector<double>; Container2 = std::vector<double>]'
../inc/boost/numeric/odeint/util/copy.hpp:78:47:   required from 'void boost::numeric::odeint::copy(const Container1&, Container2&) [with Container1 = std::vector<double>; Container2 = std::vector<double>]'
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:344:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const std::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]'
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]'
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]'
../inc/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]'
../inc/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]'
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const std::vector<double> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const std::vector<double> > >]'
../inc/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const std::vector<double> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const std::vector<double> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const std::vector<double> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const std::vector<double> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/numeric/odeint/stepper/controlled_runge_kutta.hpp:283:27:   required from 'boost::numeric::odeint::controlled_step_result boost::numeric::odeint::controlled_runge_kutta<ErrorStepper, ErrorChecker, StepAdjuster, Resizer, boost::numeric::odeint::explicit_error_stepper_tag>::try_step(System, StateInOut&, time_type&, time_type&) [with System = dynamical_system_caller; StateInOut = std::vector<double>; ErrorStepper = boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>; ErrorChecker = boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>; StepAdjuster = boost::numeric::odeint::default_step_adjuster<double, double>; Resizer = boost::numeric::odeint::initially_resizer; time_type = double]'
../inc/boost/numeric/odeint/integrate/detail/integrate_adaptive.hpp:103:30:   required from 'size_t boost::numeric::odeint::detail::integrate_adaptive(Stepper, System, State&, Time&, Time, Time&, Observer, boost::numeric::odeint::controlled_stepper_tag) [with Stepper = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; size_t = long long unsigned int]'
../inc/boost/numeric/odeint/integrate/integrate_const.hpp:48:42:   required from 'size_t boost::numeric::odeint::integrate_const(Stepper, System, State&, Time, Time, Time, Observer, StepOverflowChecker) [with Stepper = controlled_runge_kutta<runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, range_algebra, default_operations, initially_resizer>, default_error_checker<double, range_algebra, default_operations>, default_step_adjuster<double, double>, initially_resizer, explicit_error_stepper_tag>; System = dynamical_system_caller; State = std::vector<double>; Time = double; Observer = push_back_state_and_time<std::vector<double> >; StepOverflowChecker = max_step_checker; size_t = long long unsigned int]'
framework/ode_solver_library/boost_ode_solvers.h:102:57:   required from 'void boost_ode_solver<state_type>::run_integrate_const(stepper_type, dynamical_system_caller, push_back_state_and_time<state_type>) [with stepper_type = boost::numeric::odeint::controlled_runge_kutta<boost::numeric::odeint::runge_kutta_cash_karp54<std::vector<double>, double, std::vector<double>, double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations, boost::numeric::odeint::initially_resizer>, boost::numeric::odeint::default_error_checker<double, boost::numeric::odeint::range_algebra, boost::numeric::odeint::default_operations>, boost::numeric::odeint::default_step_adjuster<double, double>, boost::numeric::odeint::initially_resizer, boost::numeric::odeint::explicit_error_stepper_tag>; state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:196:34:   required from 'void boost_rkck54_ode_solver<state_type>::do_boost_integrate(dynamical_system_caller, push_back_state_and_time<state_type>&) [with state_type = std::vector<double>]'
framework/ode_solver_library/boost_ode_solvers.h:187:10:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const std::vector<double>]'
   30 |       ~model()
      |       ^
../inc/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++  -std=gnu++11 -MT framework/utils/module_dependency_utilities.o -MMD -MP -MF .deps/framework/utils/module_dependency_utilities.d -I"C:/PROGRA~1/R/R-43~1.2/include" -DNDEBUG -I../inc -DR_NO_REMAP    -I"C:/rtools43/x86_64-w64-mingw32.static.posix/include"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c -o framework/utils/module_dependency_utilities.o framework/utils/module_dependency_utilities.cpp
In file included from ../inc/boost/concept/assert.hpp:35,
                 from ../inc/boost/property_map/property_map.hpp:19,
                 from ../inc/boost/graph/topological_sort.hpp:15,
                 from framework/utils/module_dependency_utilities.h:4,
                 from framework/utils/module_dependency_utilities.cpp:1:
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]':
../inc/boost/graph/depth_first_search.hpp:117:7:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]
   47 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from ../inc/boost/graph/topological_sort.hpp:16:
../inc/boost/graph/depth_first_search.hpp:38:10: note: in a call to non-static member function 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = cycle_detector; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
   38 |     void constraints() {
      |          ^~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<cycle_detector> >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<cycle_detector>'
../inc/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<cycle_detector>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<cycle_detector>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<cycle_detector> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::CopyConstructibleConcept<cycle_detector> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >)>'
../inc/boost/graph/depth_first_search.hpp:117:7:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from ../inc/boost/concept_check.hpp:31,
                 from ../inc/boost/property_map/property_map.hpp:20:
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<cycle_detector>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::CopyConstructibleConcept<cycle_detector>]':
../inc/boost/graph/depth_first_search.hpp:39:7:   required from 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = cycle_detector; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >)>'
../inc/boost/graph/depth_first_search.hpp:117:7:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from ../inc/boost/concept/detail/general.hpp:8:
../inc/boost/concept_check.hpp:165:17: note: in a call to non-static member function 'boost::CopyConstructibleConcept<cycle_detector>::~CopyConstructibleConcept()'
  165 |   BOOST_concept(CopyConstructible,(TT))
      |                 ^~~~~~~~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/concept_check.hpp:165:3: note: in expansion of macro 'BOOST_concept'
  165 |   BOOST_concept(CopyConstructible,(TT))
      |   ^~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]':
../inc/boost/graph/graph_concepts.hpp:65:9:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]':
../inc/boost/graph/graph_concepts.hpp:85:9:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]':
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/graph/graph_concepts.hpp:74:19: note: in a call to non-static member function 'boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >::~IncidenceGraphConcept()'
   74 |     BOOST_concept(IncidenceGraph,(G))
      |                   ^~~~~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/graph/graph_concepts.hpp:74:5: note: in expansion of macro 'BOOST_concept'
   74 |     BOOST_concept(IncidenceGraph,(G))
      |     ^~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]':
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]
   47 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
../inc/boost/property_map/property_map.hpp:205:10: note: in a call to non-static member function 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
  205 |     void constraints() {
      |          ^~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::default_color_type> >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::default_color_type>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::default_color_type> >]':
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::default_color_type>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::ColorValue<boost::default_color_type> >]':
../inc/boost/graph/graph_concepts.hpp:515:9:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::ColorValue<boost::default_color_type>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]':
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/graph/graph_concepts.hpp:511:19: note: in a call to non-static member function 'boost::concepts::ColorValueConcept<boost::default_color_type>::~ColorValueConcept()'
  511 |     BOOST_concept(ColorValue,(C))
      |                   ^~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/graph/graph_concepts.hpp:511:5: note: in expansion of macro 'BOOST_concept'
  511 |     BOOST_concept(ColorValue,(C))
      |     ^~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<cycle_detector>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<cycle_detector> >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<cycle_detector>'
../inc/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<cycle_detector>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<cycle_detector>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<cycle_detector> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DFSVisitorConcept<cycle_detector, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >)>'
../inc/boost/graph/depth_first_search.hpp:117:7:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = cycle_detector]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]'
../inc/boost/graph/graph_concepts.hpp:65:9:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::Graph<G>::~Graph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
   30 |       ~model()
      |       ^
../inc/boost/graph/graph_concepts.hpp:65:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
   65 |         BOOST_CONCEPT_USAGE(Graph)
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]'
../inc/boost/graph/graph_concepts.hpp:85:9:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
   30 |       ~model()
      |       ^
../inc/boost/graph/graph_concepts.hpp:85:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
   85 |         BOOST_CONCEPT_USAGE(IncidenceGraph) {
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]':
../inc/boost/property_map/property_map.hpp:206:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>)>'
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]
   47 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
../inc/boost/property_map/property_map.hpp:147:10: note: in a call to non-static member function 'void boost::ReadablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
  147 |     void constraints() {
      |          ^~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]':
../inc/boost/property_map/property_map.hpp:207:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>)>'
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]
   47 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
../inc/boost/property_map/property_map.hpp:179:10: note: in a call to non-static member function 'void boost::WritablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
  179 |     void constraints() {
      |          ^~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]':
../inc/boost/property_map/property_map.hpp:208:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>)>'
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept_check.hpp:206:17: note: in a call to non-static member function 'boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>::~ConvertibleConcept()'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |                 ^~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/concept_check.hpp:206:3: note: in expansion of macro 'BOOST_concept'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |   ^~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::default_color_type>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::default_color_type> >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::default_color_type]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::default_color_type>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::default_color_type> >]'
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::default_color_type]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::ColorValue<boost::default_color_type>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::ColorValue<boost::default_color_type> >]'
../inc/boost/graph/graph_concepts.hpp:515:9:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'
../inc/boost/graph/graph_concepts.hpp:511:5:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:122:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::ColorValue<C>::~ColorValue() [with C = boost::default_color_type]'
   30 |       ~model()
      |       ^
../inc/boost/graph/graph_concepts.hpp:515:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  515 |         BOOST_CONCEPT_USAGE(ColorValue) {
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::DFSVisitorConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]':
../inc/boost/graph/depth_first_search.hpp:117:7:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; T = graph_visitor_t; R = bgl_named_params<int, buffer_param_t>; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::buffer, const int>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >]'
../inc/boost/graph/topological_sort.hpp:65:23:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator, const bgl_named_params<P, T, R>&) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >; P = int; T = buffer_param_t; R = no_property]'
../inc/boost/graph/topological_sort.hpp:71:21:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >]'
framework/utils/module_dependency_utilities.cpp:307:21:   required from here
../inc/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]
   47 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
../inc/boost/graph/depth_first_search.hpp:38:10: note: in a call to non-static member function 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
   38 |     void constraints() {
      |          ^~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]':
../inc/boost/graph/graph_concepts.hpp:52:9:   required from 'struct boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >)>'
../inc/boost/graph/graph_concepts.hpp:86:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/graph/graph_concepts.hpp:86:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/graph/graph_concepts.hpp:52:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
   52 |         BOOST_CONCEPT_USAGE(MultiPassInputIterator) {
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]':
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >)>'
../inc/boost/graph/graph_concepts.hpp:87:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/graph/graph_concepts.hpp:87:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >)>'
../inc/boost/graph/graph_concepts.hpp:88:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/graph/graph_concepts.hpp:88:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]':
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >)>'
../inc/boost/graph/graph_concepts.hpp:89:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/graph/graph_concepts.hpp:89:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>)>'
../inc/boost/graph/graph_concepts.hpp:90:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>]':
../inc/boost/graph/graph_concepts.hpp:90:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::adj_list_dir_traversal_tag; Y = boost::incidence_graph_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]':
../inc/boost/property_map/property_map.hpp:148:7:   required from 'void boost::ReadablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>)>'
../inc/boost/property_map/property_map.hpp:206:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept_check.hpp:206:17: note: in a call to non-static member function 'boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>::~ConvertibleConcept()'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |                 ^~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/concept_check.hpp:206:3: note: in expansion of macro 'BOOST_concept'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |   ^~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]':
../inc/boost/property_map/property_map.hpp:180:7:   required from 'void boost::WritablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; Key = void*]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >, void*>)>'
../inc/boost/property_map/property_map.hpp:207:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept_check.hpp:206:17: note: in a call to non-static member function 'boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>::~ConvertibleConcept()'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |                 ^~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/concept_check.hpp:206:3: note: in expansion of macro 'BOOST_concept'
  206 |   BOOST_concept(Convertible,(X)(Y))
      |   ^~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::lvalue_property_map_tag; Y = boost::read_write_property_map_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > > >]':
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >'
../inc/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; T = graph_visitor_t; R = bgl_named_params<int, buffer_param_t>; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::buffer, const int>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >]'
../inc/boost/graph/topological_sort.hpp:65:23:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator, const bgl_named_params<P, T, R>&) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >; P = int; T = buffer_param_t; R = no_property]'
../inc/boost/graph/topological_sort.hpp:71:21:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >]'
framework/utils/module_dependency_utilities.cpp:307:21:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >]':
../inc/boost/graph/depth_first_search.hpp:39:7:   required from 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DFSVisitorConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DFSVisitorConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DFSVisitorConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; T = graph_visitor_t; R = bgl_named_params<int, buffer_param_t>; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::buffer, const int>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >]'
../inc/boost/graph/topological_sort.hpp:65:23:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator, const bgl_named_params<P, T, R>&) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >; P = int; T = buffer_param_t; R = no_property]'
../inc/boost/graph/topological_sort.hpp:71:21:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >]'
framework/utils/module_dependency_utilities.cpp:307:21:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept_check.hpp:165:17: note: in a call to non-static member function 'boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >::~CopyConstructibleConcept()'
  165 |   BOOST_concept(CopyConstructible,(TT))
      |                 ^~~~~~~~~~~~~~~~~
../inc/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'
   29 | #    define BOOST_PP_CAT_I(a, b) a ## b
      |                                  ^
../inc/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'
   23 |     struct BOOST_PP_CAT(name,Concept)                                           \
      |            ^~~~~~~~~~~~
../inc/boost/concept_check.hpp:165:3: note: in expansion of macro 'BOOST_concept'
  165 |   BOOST_concept(CopyConstructible,(TT))
      |   ^~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<void*> >]':
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DefaultConstructible<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DefaultConstructible<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DefaultConstructible<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DefaultConstructible<void*>)>'
../inc/boost/graph/graph_concepts.hpp:67:13:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<void*>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::DefaultConstructible<void*>]':
../inc/boost/graph/graph_concepts.hpp:67:13:   required from 'boost::concepts::Graph<G>::~Graph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/concept/usage.hpp:16:48:   required from 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]'
../inc/boost/graph/graph_concepts.hpp:65:9:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<void*> >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::EqualityComparable<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::EqualityComparable<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::EqualityComparable<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::EqualityComparable<void*>)>'
../inc/boost/graph/graph_concepts.hpp:68:13:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<void*>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::EqualityComparable<void*>]':
../inc/boost/graph/graph_concepts.hpp:68:13:   required from 'boost::concepts::Graph<G>::~Graph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/concept/usage.hpp:16:48:   required from 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]'
../inc/boost/graph/graph_concepts.hpp:65:9:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<void*> >]':
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Assignable<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Assignable<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Assignable<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Assignable<void*>)>'
../inc/boost/graph/graph_concepts.hpp:69:13:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<void*>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Assignable<void*>]':
../inc/boost/graph/graph_concepts.hpp:69:13:   required from 'boost::concepts::Graph<G>::~Graph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/concept/usage.hpp:16:48:   required from 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > > >]'
../inc/boost/graph/graph_concepts.hpp:65:9:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >'
../inc/boost/graph/graph_concepts.hpp:74:5:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]'
../inc/boost/graph/graph_concepts.hpp:52:9:   required from 'struct boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/graph/graph_concepts.hpp:52:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
   52 |         BOOST_CONCEPT_USAGE(MultiPassInputIterator) {
      |         ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]'
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >]'
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::directed_tag, void*> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = boost::detail::edge_desc_impl<boost::directed_tag, void*>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::adj_list_dir_traversal_tag, boost::incidence_graph_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::adj_list_dir_traversal_tag; Y = boost::incidence_graph_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::lvalue_property_map_tag; Y = boost::readable_property_map_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'
../inc/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:120:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::lvalue_property_map_tag; Y = boost::writable_property_map_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > > >]'
../inc/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >'
../inc/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::buffer, const int>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >; T = graph_visitor_t; R = bgl_named_params<int, buffer_param_t>; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > > >, parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::buffer, const int>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >, std::integral_constant<bool, true> >]'
../inc/boost/graph/topological_sort.hpp:65:23:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator, const bgl_named_params<P, T, R>&) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >; P = int; T = buffer_param_t; R = no_property]'
../inc/boost/graph/topological_sort.hpp:71:21:   required from 'void boost::topological_sort(VertexListGraph&, OutputIterator) [with VertexListGraph = const adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; OutputIterator = std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > >]'
framework/utils/module_dependency_utilities.cpp:307:21:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = boost::topo_sort_visitor<std::front_insert_iterator<std::__cxx11::list<void*, std::allocator<void*> > > >]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<void*>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<void*> >]'
../inc/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DefaultConstructible<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DefaultConstructible<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DefaultConstructible<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<void*>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<void*> >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::EqualityComparable<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::EqualityComparable<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::EqualityComparable<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<void*>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<void*> >]'
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<void*>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Assignable<void*>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Assignable<void*> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Assignable<void*> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = void*]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]':
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept_check.hpp:502:3:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]':
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept_check.hpp:502:3:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]':
../inc/boost/concept_check.hpp:512:7:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >)>'
../inc/boost/graph/graph_concepts.hpp:53:13:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/graph/graph_concepts.hpp:53:13:   required from 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/graph/graph_concepts.hpp:86:13:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/graph_concepts.hpp:74:5:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > > >]'
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::InputIterator<TT>::~InputIterator() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:512:7: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  512 |       BOOST_CONCEPT_USAGE(InputIterator)
      |       ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]'
../inc/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept_check.hpp:502:3:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  145 |     BOOST_CONCEPT_USAGE(Assignable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]'
../inc/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept_check.hpp:502:3:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >]'
../inc/boost/concept_check.hpp:512:7:   required from 'struct boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::InputIterator<TT>::~InputIterator() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:512:7: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  512 |       BOOST_CONCEPT_USAGE(InputIterator)
      |       ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SignedInteger<long long int>]':
../inc/boost/concept_check.hpp:514:9:   required from 'boost::InputIterator<TT>::~InputIterator() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/graph/graph_concepts.hpp:53:13:   required from 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/graph/graph_concepts.hpp:86:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept_check.hpp:109:22: note: in a call to non-static member function 'boost::SignedInteger<long long int>::~SignedInteger()'
  109 |   template <> struct SignedInteger< ::boost::long_long_type> {};
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >]':
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>)>'
../inc/boost/concept_check.hpp:515:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>]'
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
../inc/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>]':
../inc/boost/concept_check.hpp:515:9:   required from 'boost::InputIterator<TT>::~InputIterator() [with TT = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::InputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/graph/graph_concepts.hpp:53:13:   required from 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]'
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> >]'
../inc/boost/graph/graph_concepts.hpp:86:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]
   39 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>; Y = std::input_iterator_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
../inc/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>]':
../inc/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >]'
../inc/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>'
../inc/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag>]'
../inc/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >::value'
../inc/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>, std::input_iterator_tag> >'
../inc/boost/concept/detail/general.hpp:51:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../inc/boost/graph/depth_first_search.hpp:116:7:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::adj_list_vertex_property_map<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, boost::vertex_index_t> >; TerminatorFunc = nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:239:37:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; DFSVisitor = cycle_detector; ColorMap = shared_array_property_map<default_color_type, adj_list_vertex_property_map<adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >, long long unsigned int, const long long unsigned int&, vertex_index_t> >; typename graph_traits<Graph>::vertex_descriptor = void*]'
../inc/boost/graph/depth_first_search.hpp:336:36:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]'
../inc/boost/graph/depth_first_search.hpp:343:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<keywords::tag::visitor, const cycle_detector>, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'
../inc/boost/graph/depth_first_search.hpp:346:3:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const bgl_named_params<T, Tag, Base>&) [with Param0 = adjacency_list<setS, listS, directedS, property<vertex_name_t, module_creator*, property<vertex_index_t, long long unsigned int> > >; P = cycle_detector; T = graph_visitor_t; R = no_property; typename result_of<graph::detail::depth_first_search_impl<Param0>(Param0, const typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename detail::convert_bgl_params_to_boost_parameter<bgl_named_params<T, Tag, Base> >::type = parameter::aux::arg_list<parameter::aux::tagged_argument<graph::keywords::tag::visitor, const cycle_detector>, parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'
framework/utils/module_dependency_utilities.cpp:232:23:   required from here
../inc/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
../inc/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::detail::iterator_category_with_traversal<std::input_iterator_tag, boost::iterators::bidirectional_traversal_tag>; Y = std::input_iterator_tag]'
   30 |       ~model()
      |       ^
../inc/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from ../inc/boost/graph/detail/adjacency_list.hpp:34,
                 from ../inc/boost/graph/adjacency_list.hpp:223,
                 from framework/utils/module_dependency_utilities.cpp:4:
In member function 'boost::detail::adj_list_edge_iterator<VertexIterator, OutEdgeIterator, Graph>::self& boost::detail::adj_list_edge_iterator<VertexIterator, OutEdgeIterator, Graph>::operator++() [with VertexIterator = std::_List_iterator<void*>; OutEdgeIterator = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]',
    inlined from 'void boost::adj_list_impl<Derived, Config, Base>::copy_impl(const boost::adj_list_impl<Derived, Config, Base>&) [with Derived = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; Config = boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config; Base = boost::directed_graph_helper<boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config>]' at ../inc/boost/graph/detail/adjacency_list.hpp:1893:63:
../inc/boost/graph/detail/adj_list_edge_iterator.hpp:70:9: warning: '((const std::_Self*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)))[2].std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >::_M_node' may be used uninitialized [-Wmaybe-uninitialized]
   70 |         if (edges BOOST_GRAPH_MEMBER first == edges BOOST_GRAPH_MEMBER second)
      |         ^~
../inc/boost/graph/detail/adjacency_list.hpp: In member function 'void boost::adj_list_impl<Derived, Config, Base>::copy_impl(const boost::adj_list_impl<Derived, Config, Base>&) [with Derived = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; Config = boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config; Base = boost::directed_graph_helper<boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config>]':
../inc/boost/graph/detail/adjacency_list.hpp:1892:23: note: '((const std::_Self*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)))[2].std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >::_M_node' was declared here
 1892 |         edge_iterator ei, ei_end;
      |                       ^~
../inc/boost/graph/detail/adjacency_list.hpp:1897:57: warning: '*(const boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)).boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>::m_src' may be used uninitialized [-Wmaybe-uninitialized]
 1897 |           boost::tie(e, inserted) = add_edge(vertex_map[(stored_vertex*)s],
      |                                                         ^~~~~~~~~~~~~~~~~
../inc/boost/graph/detail/adjacency_list.hpp:1892:23: note: '*(const boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)).boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>::m_src' was declared here
 1892 |         edge_iterator ei, ei_end;
      |                       ^~
In member function 'EdgeDescriptor boost::detail::out_edge_iter<BaseIter, VertexDescriptor, EdgeDescriptor, Difference>::dereference() const [with BaseIter = std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >; VertexDescriptor = void*; EdgeDescriptor = boost::detail::edge_desc_impl<boost::directed_tag, void*>; Difference = long long int]',
    inlined from 'static typename Facade::reference boost::iterators::iterator_core_access::dereference(const Facade&) [with Facade = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>]' at ../inc/boost/iterator/iterator_facade.hpp:550:31,
    inlined from 'boost::iterators::detail::iterator_facade_base<Derived, Value, CategoryOrTraversal, Reference, Difference, false, false>::reference boost::iterators::detail::iterator_facade_base<Derived, Value, CategoryOrTraversal, Reference, Difference, false, false>::operator*() const [with Derived = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>; Value = boost::detail::edge_desc_impl<boost::directed_tag, void*>; CategoryOrTraversal = boost::iterators::bidirectional_traversal_tag; Reference = boost::detail::edge_desc_impl<boost::directed_tag, void*>; Difference = long long int]' at ../inc/boost/iterator/iterator_facade.hpp:656:53,
    inlined from 'boost::detail::adj_list_edge_iterator<VertexIterator, OutEdgeIterator, Graph>::value_type boost::detail::adj_list_edge_iterator<VertexIterator, OutEdgeIterator, Graph>::operator*() const [with VertexIterator = std::_List_iterator<void*>; OutEdgeIterator = boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>; Graph = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >]' at ../inc/boost/graph/detail/adj_list_edge_iterator.hpp:86:16,
    inlined from 'void boost::adj_list_impl<Derived, Config, Base>::copy_impl(const boost::adj_list_impl<Derived, Config, Base>&) [with Derived = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; Config = boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config; Base = boost::directed_graph_helper<boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config>]' at ../inc/boost/graph/detail/adjacency_list.hpp:1896:40:
../inc/boost/graph/detail/adjacency_list.hpp:152:62: warning: '*(const std::_Self*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)).std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >::_M_node' may be used uninitialized [-Wmaybe-uninitialized]
  152 |                               &(*this->base()).get_property());
      |                                                              ^
../inc/boost/graph/detail/adjacency_list.hpp: In member function 'void boost::adj_list_impl<Derived, Config, Base>::copy_impl(const boost::adj_list_impl<Derived, Config, Base>&) [with Derived = boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >; Config = boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config; Base = boost::directed_graph_helper<boost::detail::adj_list_gen<boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> > >, boost::listS, boost::setS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int> >, boost::no_property, boost::no_property, boost::listS>::config>]':
../inc/boost/graph/detail/adjacency_list.hpp:1892:23: note: '*(const std::_Self*)((char*)&ei + offsetof(boost::detail::edge_iterator, boost::detail::adj_list_edge_iterator<std::_List_iterator<void*>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::adjacency_list<boost::setS, boost::listS, boost::directedS, boost::property<boost::vertex_name_t, module_creator*, boost::property<boost::vertex_index_t, long long unsigned int, boost::no_property> >, boost::no_property, boost::no_property, boost::listS> >::edges.boost::optional<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::<unnamed>.boost::optional_detail::optional_base<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::m_storage.boost::optional_detail::aligned_storage<std::pair<boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int>, boost::detail::out_edge_iter<std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >, void*, boost::detail::edge_desc_impl<boost::directed_tag, void*>, long long int> > >::dummy_)).std::_Rb_tree_const_iterator<boost::detail::stored_edge_property<void*, boost::no_property> >::_M_node' was declared here
 1892 |         edge_iterator ei, ei_end;
      |                       ^~
g++ -shared -s -static-libgcc -o BioCroWP.dll tmp.def R_framework_version.o R_module_library.o R_skeleton_version.o init.o module_library/module_library.o framework/R_helper_functions.o framework/dynamical_system.o framework/dynamical_system_helper_functions.o framework/module_helper_functions.o framework/modules.o framework/ode_solver.o framework/quadratic_root.o framework/state_map.o framework/validate_dynamical_system.o framework/ode_solver_library/boost_ode_solvers.o framework/ode_solver_library/ode_solver_factory.o framework/utils/module_dependency_utilities.o -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib -LC:/PROGRA~1/R/R-43~1.2/bin/x64 -lR
installing to C:/Users/natal/masters/BioCroWP_2/BioCroWP.Rcheck/00LOCK-BioCroWP/00new/BioCroWP/libs/x64
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (BioCroWP)
